{
  "openapi": "3.0.0",
  "info": {
    "title": "cv_wizard",
    "version": "1.0.0",
    "description": "cv_wizard API documentation"
  },
  "servers": [
    {
      "url": "http://localhost:3003"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password",
                  "firstName",
                  "lastName"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "test@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Passw0rd!"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "+1234567890"
                  },
                  "city": {
                    "type": "string",
                    "example": "New York"
                  },
                  "country": {
                    "type": "string",
                    "example": "USA"
                  },
                  "linkedinUrl": {
                    "type": "string",
                    "example": "https://linkedin.com/in/johndoe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User Registered successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error / Email already registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email test@example.com is already registered"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Method not allowed."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "clxyz12345"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "test@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Passw0rd!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in."
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOi..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid id/email or password"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Method not allowed."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "patch": {
        "summary": "Update authenticated user profile",
        "description": "Allows the authenticated user to update their profile information. At least one attribute must be provided.",
        "tags": [
          "Users"
        ],
        "operationId": "updateUserProfile",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "minProperties": 1,
                "properties": {
                  "firstName": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Doe"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "+1234567890"
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "New York"
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "USA"
                  },
                  "linkedinUrl": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://www.linkedin.com/in/johndoe"
                  }
                },
                "example": {
                  "firstName": "John",
                  "lastName": "Doe",
                  "city": "New York"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User has been updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User has been updated successfully"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "user_123"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "johndoe@gmail.com"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "phoneNumber": {
                          "type": "string",
                          "example": "+1234567890"
                        },
                        "city": {
                          "type": "string",
                          "example": "New York"
                        },
                        "country": {
                          "type": "string",
                          "example": "USA"
                        },
                        "linkedinUrl": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://www.linkedin.com/in/johndoe"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-08-01T12:34:56.000Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error - request body is invalid or empty",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "At least 1 attribute is required to update"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, No token provided"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "token"
      }
    }
  }
}