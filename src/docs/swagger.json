{
  "openapi": "3.0.0",
  "info": {
    "title": "cv_wizard",
    "version": "1.0.0",
    "description": "cv_wizard API documentation"
  },
  "servers": [
    {
      "url": "http://localhost:3003"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password", "firstName", "lastName"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "test@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Passw0rd!"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "+1234567890"
                  },
                  "city": {
                    "type": "string",
                    "example": "New York"
                  },
                  "country": {
                    "type": "string",
                    "example": "USA"
                  },
                  "linkedinUrl": {
                    "type": "string",
                    "example": "https://linkedin.com/in/johndoe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User Registered successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error / Email already registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email test@example.com is already registered"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "fail" },
                    "message": { "type": "string", "example": "Method not allowed." }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["password"],
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "clxyz12345"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "test@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Passw0rd!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" },
                    "message": { "type": "string", "example": "Successfully logged in." },
                    "token": { "type": "string", "example": "eyJhbGciOi..." }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "fail" },
                    "message": { "type": "string", "example": "Invalid id/email or password" }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "fail" },
                    "message": { "type": "string", "example": "Method not allowed." }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "token"
      }
    }
  }
}
